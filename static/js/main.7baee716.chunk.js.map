{"version":3,"sources":["components/Items/Items.tsx","components/Pagination/Pagination.tsx","components/Table/Table.tsx","App.tsx","utils.ts","index.tsx"],"names":["Items","_ref","items","view","_jsx","children","map","item","Pagination","pages","pageCur","setPage","_jsxs","className","concat","href","onClick","page","length","Table","limit","setLimit","startItem","endItem","Math","min","_Fragment","id","onChange","event","parseInt","target","value","selected","htmlFor","from","to","numbers","n","push","getNumbers","App","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","getPages","ceil","visibleItems","i","getItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7baee716.chunk.js","sourcesContent":["type Props = {\n  view: () => string[];\n};\n\nexport const Items: React.FC<Props> = ({\n  view,\n}) => {\n  const items = view();\n\n  return (\n    <ul>\n      {\n        items.map(item => {\n          if (item) {\n            return (\n              <li data-cy=\"item\" key={item}>\n                {item}\n              </li>\n            );\n          }\n\n          return null;\n        })\n      }\n    </ul>\n  );\n};\n","type Props = {\n  pages: string[];\n  pageCur: number;\n  setPage: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({ pages, pageCur, setPage }) => {\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${pageCur !== 1 ? '' : 'disabled'}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={pageCur === 1 ? 'true' : 'false'}\n          onClick={() => {\n            if (pageCur !== 1) {\n              setPage(pageCur - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {\n        pages.map(page => {\n          return (\n            <li className={`page-item ${+page === pageCur ? 'active' : ''}`}>\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={() => {\n                  if (+page !== pageCur) {\n                    setPage(+page);\n                  }\n                }}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })\n      }\n      <li className={`page-item ${pageCur !== pages.length ? '' : 'disabled'}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={pageCur === pages.length ? 'true' : 'false'}\n          onClick={() => {\n            if (pageCur !== pages.length) {\n              setPage(pageCur + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { Items } from '../Items';\nimport { Pagination } from '../Pagination';\n\ntype Props = {\n  view:() => string[];\n  pages: string[];\n  items: string[]\n  pageCur: number;\n  limit: number;\n  setPage: (page: number) => void;\n  setLimit: (page: number) => void;\n};\n\nexport const Table: React.FC<Props> = ({\n  view,\n  pages,\n  pageCur,\n  items,\n  limit,\n  setPage,\n  setLimit,\n}) => {\n  const startItem: number = pageCur * limit + 1 - limit;\n  const endItem: number = Math.min(pageCur * limit, items.length);\n\n  return (\n    <>\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${pageCur} (items ${startItem} - ${endItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => {\n              setLimit(parseInt(event.target.value, 10));\n              setPage(1);\n            }}\n            value={limit}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\" selected>5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        pages={pages}\n        pageCur={pageCur}\n        setPage={setPage}\n      />\n\n      <Items view={view} />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers, getPages } from './utils';\nimport { Table } from './components/Table/Table';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport function getItems(page: number, limit: number): string[] {\n  const visibleItems = [];\n\n  for (let i = (page - 1) * limit; i < (page * limit); i += 1) {\n    visibleItems.push(items[i]);\n  }\n\n  return visibleItems;\n}\n\nexport function getLength() {\n  return items.length;\n}\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n  const [limit, setLimit] = useState<number>(5);\n\n  const totalPage = Math.ceil(getLength() / limit);\n\n  const pages = getPages(1, totalPage)\n    .map(n => `${n}`);\n\n  return (\n    <div className=\"container\">\n      <Table\n        view={() => getItems(page, limit)}\n        items={items}\n        pages={pages}\n        pageCur={page}\n        limit={limit}\n        setPage={setPage}\n        setLimit={setLimit}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getPages(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}