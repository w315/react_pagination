{"version":3,"sources":["utils.ts","components/Items/Items.tsx","components/Pagination/Pagination.tsx","components/Table/Table.tsx","App.tsx","index.tsx"],"names":["from","to","Items","_ref","items","view","length","_jsx","children","map","item","Pagination","pages","pageCur","setPage","nextLinkCondition","prevLinkCondition","_jsxs","className","concat","href","onClick","page","condition","Table","limit","setLimit","startItem","endItem","Math","min","_Fragment","id","onChange","event","parseInt","target","value","defaultValue","htmlFor","Array","_","i","n","App","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","getPages","ceil","startIndex","endIndex","slice","getItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0732562.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  return Array.from({ length: to - from + 1 }, (_, i) => from + i);\n}\n\nexport function getPages(from: number, to: number): number[] {\n  return Array.from({ length: to - from + 1 }, (_, i) => from + i);\n}\n","type Props = {\n  view: () => string[];\n};\n\nexport const Items: React.FC<Props> = ({\n  view,\n}) => {\n  const items = view();\n\n  if (items.length !== 0) {\n    return (\n      <ul>\n        {\n          items.map(item => {\n            if (item) {\n              return (\n                <li data-cy=\"item\" key={item}>\n                  {item}\n                </li>\n              );\n            }\n\n            return null;\n          })\n        }\n      </ul>\n    );\n  }\n\n  return null;\n};\n","type Props = {\n  pages: string[];\n  pageCur: number;\n  setPage: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({ pages, pageCur, setPage }) => {\n  const nextLinkCondition = pageCur === pages.length;\n  const prevLinkCondition = pageCur === 1;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${prevLinkCondition ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={prevLinkCondition ? 'true' : 'false'}\n          onClick={() => {\n            if (pageCur !== 1) {\n              setPage(pageCur - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {\n        pages.map(page => {\n          const condition = +page === pageCur;\n\n          return (\n            <li\n              className={`page-item ${condition ? 'active' : ''}`}\n              key={page}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={() => {\n                  if (+page !== pageCur) {\n                    setPage(+page);\n                  }\n                }}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })\n      }\n      <li className={`page-item ${nextLinkCondition ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={nextLinkCondition ? 'true' : 'false'}\n          onClick={() => {\n            if (pageCur !== pages.length) {\n              setPage(pageCur + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { Items } from '../Items';\nimport { Pagination } from '../Pagination';\n\ntype Props = {\n  view:() => string[];\n  pages: string[];\n  items: string[]\n  pageCur: number;\n  limit: number;\n  setPage: (page: number) => void;\n  setLimit: (page: number) => void;\n};\n\nexport const Table: React.FC<Props> = ({\n  view,\n  pages,\n  pageCur,\n  items,\n  limit,\n  setPage,\n  setLimit,\n}) => {\n  const startItem: number = (pageCur - 1) * limit + 1;\n  const endItem: number = Math.min(pageCur * limit, items.length);\n\n  return (\n    <>\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${pageCur} (items ${startItem} - ${endItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => {\n              setLimit(parseInt(event.target.value, 10));\n              setPage(1);\n            }}\n            defaultValue={limit}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        pages={pages}\n        pageCur={pageCur}\n        setPage={setPage}\n      />\n\n      <Items view={view} />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers, getPages } from './utils';\nimport { Table } from './components/Table/Table';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport function getItems(page: number, limit: number): string[] {\n  const startIndex = (page - 1) * limit;\n  const endIndex = page * limit;\n\n  const visibleItems = items.slice(startIndex, endIndex);\n\n  return visibleItems;\n}\n\nexport function getLength() {\n  return items.length;\n}\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n  const [limit, setLimit] = useState<number>(5);\n\n  const totalPage = Math.ceil(getLength() / limit);\n\n  const pages = getPages(1, totalPage)\n    .map(n => `${n}`);\n\n  return (\n    <div className=\"container\">\n      <Table\n        view={() => getItems(page, limit)}\n        items={items}\n        pages={pages}\n        pageCur={page}\n        limit={limit}\n        setPage={setPage}\n        setLimit={setLimit}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}